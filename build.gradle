/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
allprojects {
    apply plugin: "idea"
    apply plugin: "scala"

    def sparkVersion = findProperty("sparkVersion") ?: "2.3.0"
    def scalaVersion = findProperty("scalaVersion") ?: "2.11"

    println ("Building with scala: ${scalaVersion}, spark: ${sparkVersion}")

    group = "com.linkedin.dualip"
    
    project.version = "1.0.0"

    repositories {
        mavenCentral()
    }

    dependencies {
      compileOnly("org.apache.spark:spark-core_${scalaVersion}:${sparkVersion}")
      compileOnly("org.apache.spark:spark-sql_${scalaVersion}:${sparkVersion}")

      compile("com.twitter:algebird-core_${scalaVersion}:0.13.5")
      compile("org.scalanlp:breeze_${scalaVersion}:0.13.2")
      compile("com.github.scopt:scopt_${scalaVersion}:3.7.0")

      testImplementation("org.apache.spark:spark-core_${scalaVersion}:${sparkVersion}")
      testImplementation("org.apache.spark:spark-sql_${scalaVersion}:${sparkVersion}")
      testImplementation("org.testng:testng:6.10")

      testRuntimeOnly("com.fasterxml.jackson.core:jackson-databind:2.6.7.1")
    }

    jar {
      manifest {
          attributes "Main-Class": "com.linkedin.dualip.solver.LPSolverDriver"
      }

      from {
          configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
      }
    }
}
